buildscript {
    ext.kotlin_version = '1.7.21'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
}

group = 'ru.get4click'
version = '1.1.2'

publishing {
    publications {
        release(MavenPublication) {
            groupId = 'ru.get4click'
            artifactId = 'sdk'
            version = '1.2.0'

            afterEvaluate {
                from components.release
            }
        }
    }
    repositories {
        maven {
            name = 'myrepo'
            url = "${project.buildDir}/repo"
        }
    }
}

android {
    compileSdk 33
    publishing {
        singleVariant('release') {
            withSourcesJar()
        }

    }
    defaultConfig {

        minSdk 21
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }
    namespace = 'ru.get4click.sdk'

    buildTypes {
        def BASE_API_URL = "BASE_API_URL"
        debug {
            buildConfigField "String", BASE_API_URL, "\"https://get4click.ru/api/\""
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", BASE_API_URL, "\"https://get4click.ru/api/\""
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }

    packagingOptions {
        pickFirst 'kotlinx/coroutines/*'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.5.1"
    implementation "androidx.lifecycle:lifecycle-runtime:2.5.1"

    // Networking
    implementation 'com.github.kittinunf.fuel:fuel:2.3.1'
    implementation 'com.github.kittinunf.fuel:fuel-coroutines:2.3.1'
    implementation 'com.github.kittinunf.fuel:fuel-json:2.3.1'
}

tasks.register('generateRepo', Zip) {
    def publishTask = tasks.named('publishReleasePublicationToMyrepoRepository')
    from publishTask.map { it.getRepository().getUrl() }
    into 'mylibrary'
    archiveFileName.set('mylibrary.zip')
}